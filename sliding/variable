def max_sum_fixed_window(nums, k):
    max_sum = float('-inf')
    current_sum = 0
    
    print(f"Array: {nums}, K: {k}")
    print("i | Window | i-k+1 | Action")
    print("-" * 40)
    
    for i in range(len(nums)):
        current_sum += nums[i]
        print(f"{i} | Add nums[{i}] = {nums[i]} | current_sum = {current_sum}")
        
        # When we have a complete window (i >= k-1)
        if i >= k - 1:
            max_sum = max(max_sum, current_sum)
            left_index = i - k + 1
            print(f"  | Complete window [{left_index}, {i}] = {nums[left_index:i+1]} | max_sum = {max_sum}")
            print(f"  | Remove nums[{left_index}] = {nums[left_index]} | current_sum = {current_sum} - {nums[left_index]}")
            
            current_sum -= nums[left_index]
        
        print()
    
    return max_sum

# Example execution
nums = [2, 1, 5, 1, 3, 2]
k = 3
result = max_sum_fixed_window(nums, k)
print(f"Final result: {result}")